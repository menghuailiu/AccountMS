package patrickstar.com.accountms.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import patrickstar.com.accountms.dao.*;
import patrickstar.com.accountms.model.*;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tb_flagDaoConfig;
    private final DaoConfig tb_inaccountDaoConfig;
    private final DaoConfig tb_outaccountDaoConfig;
    private final DaoConfig tb_pwdDaoConfig;

    private final tb_flagDao tb_flagDao;
    private final tb_inaccountDao tb_inaccountDao;
    private final tb_outaccountDao tb_outaccountDao;
    private final tb_pwdDao tb_pwdDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tb_flagDaoConfig = daoConfigMap.get(tb_flagDao.class).clone();
        tb_flagDaoConfig.initIdentityScope(type);

        tb_inaccountDaoConfig = daoConfigMap.get(tb_inaccountDao.class).clone();
        tb_inaccountDaoConfig.initIdentityScope(type);

        tb_outaccountDaoConfig = daoConfigMap.get(tb_outaccountDao.class).clone();
        tb_outaccountDaoConfig.initIdentityScope(type);

        tb_pwdDaoConfig = daoConfigMap.get(tb_pwdDao.class).clone();
        tb_pwdDaoConfig.initIdentityScope(type);

        tb_flagDao = new tb_flagDao(tb_flagDaoConfig, this);
        tb_inaccountDao = new tb_inaccountDao(tb_inaccountDaoConfig, this);
        tb_outaccountDao = new tb_outaccountDao(tb_outaccountDaoConfig, this);
        tb_pwdDao = new tb_pwdDao(tb_pwdDaoConfig, this);

        registerDao(tb_flag.class, tb_flagDao);
        registerDao(tb_inaccount.class, tb_inaccountDao);
        registerDao(tb_outaccount.class, tb_outaccountDao);
        registerDao(tb_pwd.class, tb_pwdDao);
    }
    
    public void clear() {
        tb_flagDaoConfig.getIdentityScope().clear();
        tb_inaccountDaoConfig.getIdentityScope().clear();
        tb_outaccountDaoConfig.getIdentityScope().clear();
        tb_pwdDaoConfig.getIdentityScope().clear();
    }

    public tb_flagDao getTb_flagDao() {
        return tb_flagDao;
    }

    public tb_inaccountDao getTb_inaccountDao() {
        return tb_inaccountDao;
    }

    public tb_outaccountDao getTb_outaccountDao() {
        return tb_outaccountDao;
    }

    public tb_pwdDao getTb_pwdDao() {
        return tb_pwdDao;
    }

}
